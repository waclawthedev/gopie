package gopie_test

import (
	"testing"

	"github.com/waclawthedev/gopie"
)

func TestTruncateString(t *testing.T) {
	shouldEqual(t, gopie.TruncateString("ABCüëçDEFG", 4), "ABCüëç...")
	shouldEqual(t, gopie.TruncateString("ABCüëçDEFG", 8), "ABCüëçDEFG")
}

func TestWithoutInvisibleChars(t *testing.T) {
	shouldEqual(t, gopie.WithoutInvisibleChars("ABCüëçDEFG"), "ABCüëçDEFG")
	shouldEqual(t, gopie.WithoutInvisibleChars("¬ß1234567890-=qwertyuiop[]asdfghjkl;'\\`zxcvbnm,./"),
		"¬ß1234567890-=qwertyuiop[]asdfghjkl;'\\`zxcvbnm,./")
	shouldEqual(t, gopie.WithoutInvisibleChars("1234567890-=–π—Ü—É–∫–µ–Ω–≥—à—â–∑—Ö—ó—Ñ—ñ–≤–∞–ø—Ä–æ–ª–¥–∂—î º“ë—è—á—Å–º–∏—Ç—å–±—é."),
		"1234567890-=–π—Ü—É–∫–µ–Ω–≥—à—â–∑—Ö—ó—Ñ—ñ–≤–∞–ø—Ä–æ–ª–¥–∂—î º“ë—è—á—Å–º–∏—Ç—å–±—é.")
	shouldEqual(t, gopie.WithoutInvisibleChars("ƒÖ, ƒá, ƒô, ≈Ç, ≈Ñ, √≥, ≈õ, ≈∫, ≈º"), "ƒÖ, ƒá, ƒô, ≈Ç, ≈Ñ, √≥, ≈õ, ≈∫, ≈º")

	shouldEqual(t, gopie.WithoutInvisibleChars("1\n"), "1")
}

func TestIsVisible(t *testing.T) {
	shouldEqual(t, gopie.IsVisible('1'), true)
	shouldEqual(t, gopie.IsVisible('a'), true)
	shouldEqual(t, gopie.IsVisible('–á'), true)
	shouldEqual(t, gopie.IsVisible('–á'), true)
	shouldEqual(t, gopie.IsVisible('Ë™û'), true)
	shouldEqual(t, gopie.IsVisible('"'), true)
	shouldEqual(t, gopie.IsVisible('&'), true)
	shouldEqual(t, gopie.IsVisible('@'), true)

	shouldEqual(t, gopie.IsVisible('\n'), false)
	shouldEqual(t, gopie.IsVisible('\t'), false)
	shouldEqual(t, gopie.IsVisible('Û†ÄÆ'), false) // U+E002E TAG FULL STOP
	shouldEqual(t, gopie.IsVisible('Û†áØ'), false) // U+E01EF VARIATION SELECTOR-256
	shouldEqual(t, gopie.IsVisible('Û†Öó'), false) // U+E0157 VARIATION SELECTOR-104
	shouldEqual(t, gopie.IsVisible('Û†Åæ'), false) // U+E007E TAG TILDE
}
